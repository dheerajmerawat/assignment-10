		Assignment-10: Functions

1. Write a function to calculate the area of a circle. (TSRS)

#include<stdio.h>
#include<stdlib.h>
int aofc(int);
int main()
{
    int r,areaof;
    printf("Enter Radius");
    scanf("%d",&r);
    areaof=aofc(r);
    printf("%d",areaof);
    return 0;
}
int aofc(int radius)
{
    int area;
    area=3.1415*radius*radius;
    return area;
}

2. Write a function to calculate simple interest. (TSRS)

#include<stdio.h>
#include<stdlib.h>
int simpleinterest(int,int,int);
int main()
{
    int p,r,t,si;
    printf("Enter principle");
    scanf("%d",&p);
    printf("Enter rate");
    scanf("%d",&r);
    printf("Enter Time");
    scanf("%d",&t);
    si=simpleinterest(p,r,t);
    printf("Interest is %d",si);
    printf("\n");
    return 0;
}
int simpleinterest(int principle,int rate,int time)
{
    int sif;
    sif=principle*rate*time/100;
    return sif;
}




3. Write a function to check whether a given number is even or odd. Return 1 if the
number is even, otherwise return 0. (TSRS)

#include<stdio.h>
#include<stdlib.h>
int oddeven(int);
int main()
{
    int i;
    printf("Enter a number");
    scanf("%d",&i);
    i=oddeven(i);
    printf("%d",i);
}
int oddeven(int j)
{
    if(j%2==0)
        return 1;
    else
        return 0;

}



4. Write a function to print first N natural numbers (TSRN)
ans.

#include<stdio.h>
#include<stdlib.h>
void Naturaln(int);
int main()
{
    int a;
    printf("Enter a number");
    scanf("%d",&a);
    Naturaln(a);
    printf("\n");
    return 0;
}
void Naturaln(int x)
{
    int i;
    for(i=1;i<=x;i++)
    printf("%d \n",i);
}


5. Write a function to print first N odd natural numbers. (TSRN)

ans.

#include<stdio.h>
#include<stdlib.h>
void Naturaln(int);
int main()
{
    int a;
    printf("Enter a number");
    scanf("%d",&a);
    Naturaln(a);
    printf("\n");
    return 0;
}
void Naturaln(int x)
{
    int i;
    for(i=1;i<=x;i++)
    if(i%2==!0)
    printf("%d \n",i);
}


6. Write a function to calculate the factorial of a number. (TSRS)

#include<stdio.h>
#include<stdlib.h>
int fact(int);
int main()
{
int n,factorial,x;
printf("Enter a number");
scanf("%d",&n);
x=n;
factorial=fact(n);
printf("factorial is %d",factorial);
printf("\n");
return 0;
}
int fact(int m)
{
    int x,f=1;
    while(m>=1)
          {
            f=f*m;
            m--;
          }
    return f;
}


7. Write a function to calculate the number of combinations one can make from n items
and r selected at a time. (TSRS)

#include<stdio.h>
int fact(int n)
{
    int i,f=1;
    for(i=1;i<=n;i++)
        f=f*i;
    return f;
}
int comb(int n, int r)
{
    return fact(n)/(fact(r)*fact(n-r));
}
int per(int n, int r)
{
    return fact(n)/(fact(n-r));

}

int main()
{
   printf("Combination=%d\n\n",comb(10,2));
   printf("Permutation=%d\n\n",per(10,2));
}
}


9. Write a function to check whether a given number contains a given digit or not.
(TSRS)

#include<stdio.h>
int check (int digit,int num)
{
    while(num)
    {
        if(num%10==digit)
            return 1;
        num=num/10;
    }
    return 0;
}
int main()
{
    if(check(2,123))
        printf("Yes\n\n");
    else
        printf("No\n\n");
}


10. Write a function to print all prime factors of a given number. For example, if the
number is 36 then your result should be 2, 2, 3, 3. (TSRN)

#include<stdio.h>
#include<stdlib.h>
void prime(int);
int main()
{
    int x;
    printf("Enter a number");
    scanf("%d",&x);
    prime(x);
    printf("\n");
    return 0;
}
void prime (int y)
{
    int i;
    for(i=2;y>1;i++)
    {
        while(y%i==0)
    {
     printf("%d ",i);
    y=y/i;
  }
}
}
